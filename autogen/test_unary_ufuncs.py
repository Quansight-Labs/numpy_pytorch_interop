# this file is autogenerated via gen_ufuncs.py
# do not edit manually!

import _util
import numpy as np
import torch
from _ndarray import asarray_replacer
from _unary_ufuncs import *
from testing import assert_allclose


def test_absolute():
    assert_allclose(np.absolute(0.5), absolute(0.5), atol=1e-14, check_dtype=False)


def test_absolute():
    assert_allclose(np.absolute(0.5), absolute(0.5), atol=1e-14, check_dtype=False)


def test_arccos():
    assert_allclose(np.arccos(0.5), arccos(0.5), atol=1e-14, check_dtype=False)


def test_arccosh():
    assert_allclose(np.arccosh(0.5), arccosh(0.5), atol=1e-14, check_dtype=False)


def test_arcsin():
    assert_allclose(np.arcsin(0.5), arcsin(0.5), atol=1e-14, check_dtype=False)


def test_arcsinh():
    assert_allclose(np.arcsinh(0.5), arcsinh(0.5), atol=1e-14, check_dtype=False)


def test_arctan():
    assert_allclose(np.arctan(0.5), arctan(0.5), atol=1e-14, check_dtype=False)


def test_arctanh():
    assert_allclose(np.arctanh(0.5), arctanh(0.5), atol=1e-14, check_dtype=False)


def test_cbrt():
    assert_allclose(np.cbrt(0.5), cbrt(0.5), atol=1e-14, check_dtype=False)


def test_ceil():
    assert_allclose(np.ceil(0.5), ceil(0.5), atol=1e-14, check_dtype=False)


def test_conjugate():
    assert_allclose(np.conjugate(0.5), conjugate(0.5), atol=1e-14, check_dtype=False)


def test_conjugate():
    assert_allclose(np.conjugate(0.5), conjugate(0.5), atol=1e-14, check_dtype=False)


def test_cos():
    assert_allclose(np.cos(0.5), cos(0.5), atol=1e-14, check_dtype=False)


def test_cosh():
    assert_allclose(np.cosh(0.5), cosh(0.5), atol=1e-14, check_dtype=False)


def test_deg2rad():
    assert_allclose(np.deg2rad(0.5), deg2rad(0.5), atol=1e-14, check_dtype=False)


def test_degrees():
    assert_allclose(np.degrees(0.5), degrees(0.5), atol=1e-14, check_dtype=False)


def test_exp():
    assert_allclose(np.exp(0.5), exp(0.5), atol=1e-14, check_dtype=False)


def test_exp2():
    assert_allclose(np.exp2(0.5), exp2(0.5), atol=1e-14, check_dtype=False)


def test_expm1():
    assert_allclose(np.expm1(0.5), expm1(0.5), atol=1e-14, check_dtype=False)


def test_fabs():
    assert_allclose(np.fabs(0.5), fabs(0.5), atol=1e-14, check_dtype=False)


def test_floor():
    assert_allclose(np.floor(0.5), floor(0.5), atol=1e-14, check_dtype=False)


def test_isfinite():
    assert_allclose(np.isfinite(0.5), isfinite(0.5), atol=1e-14, check_dtype=False)


def test_isinf():
    assert_allclose(np.isinf(0.5), isinf(0.5), atol=1e-14, check_dtype=False)


def test_isnan():
    assert_allclose(np.isnan(0.5), isnan(0.5), atol=1e-14, check_dtype=False)


def test_log():
    assert_allclose(np.log(0.5), log(0.5), atol=1e-14, check_dtype=False)


def test_log10():
    assert_allclose(np.log10(0.5), log10(0.5), atol=1e-14, check_dtype=False)


def test_log1p():
    assert_allclose(np.log1p(0.5), log1p(0.5), atol=1e-14, check_dtype=False)


def test_log2():
    assert_allclose(np.log2(0.5), log2(0.5), atol=1e-14, check_dtype=False)


def test_logical_not():
    assert_allclose(
        np.logical_not(0.5), logical_not(0.5), atol=1e-14, check_dtype=False
    )


def test_negative():
    assert_allclose(np.negative(0.5), negative(0.5), atol=1e-14, check_dtype=False)


def test_positive():
    assert_allclose(np.positive(0.5), positive(0.5), atol=1e-14, check_dtype=False)


def test_rad2deg():
    assert_allclose(np.rad2deg(0.5), rad2deg(0.5), atol=1e-14, check_dtype=False)


def test_radians():
    assert_allclose(np.radians(0.5), radians(0.5), atol=1e-14, check_dtype=False)


def test_reciprocal():
    assert_allclose(np.reciprocal(0.5), reciprocal(0.5), atol=1e-14, check_dtype=False)


def test_rint():
    assert_allclose(np.rint(0.5), rint(0.5), atol=1e-14, check_dtype=False)


def test_sign():
    assert_allclose(np.sign(0.5), sign(0.5), atol=1e-14, check_dtype=False)


def test_signbit():
    assert_allclose(np.signbit(0.5), signbit(0.5), atol=1e-14, check_dtype=False)


def test_sin():
    assert_allclose(np.sin(0.5), sin(0.5), atol=1e-14, check_dtype=False)


def test_sinh():
    assert_allclose(np.sinh(0.5), sinh(0.5), atol=1e-14, check_dtype=False)


def test_sqrt():
    assert_allclose(np.sqrt(0.5), sqrt(0.5), atol=1e-14, check_dtype=False)


def test_square():
    assert_allclose(np.square(0.5), square(0.5), atol=1e-14, check_dtype=False)


def test_tan():
    assert_allclose(np.tan(0.5), tan(0.5), atol=1e-14, check_dtype=False)


def test_tanh():
    assert_allclose(np.tanh(0.5), tanh(0.5), atol=1e-14, check_dtype=False)


def test_trunc():
    assert_allclose(np.trunc(0.5), trunc(0.5), atol=1e-14, check_dtype=False)
